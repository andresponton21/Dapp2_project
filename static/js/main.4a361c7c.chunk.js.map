{"version":3,"sources":["components/FormSubmit.js","components/FormTitle.js","components/TextInput.js","components/FormTextInput.js","components/FormLabel.js","components/FormField.js","components/FormFieldHeading.js","components/ErrorMessage.js","components/VerifyProduct.js","serviceWorker.js","index.js","App.js"],"names":["FormSubmit","onClick","isComplete","isLoading","isDisabled","loadingText","submitText","completeText","buttonClassName","className","disabled","FormTitle","children","TextInput","id","placeholder","value","onChange","type","FormTextInput","setValue","event","target","FormLabel","htmlFor","text","isOptional","FormField","FormFieldHeading","ErrorMessage","label","VerifyProduct","submitData","React","useState","name","setName","email","setEmail","user","setUser","activeSection","setActiveSection","hash","setHash","maker","setMaker","marketPlace","setMarketPlace","status","setStatus","navigator","onLine","hasConnection","setHasConnection","verifyProduct","setVerifyProduct","onChangeMarketPlace","useEffect","handleOnline","handleOffline","window","addEventListener","removeEventListener","Section","isVisible","SectionHeading","style","marginBottom","checked","setTimeout","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a361c7c.chunk.js","sourcesContent":["import './FormSubmit.css'\r\nimport React from 'react'\r\n\r\nexport default function FormSubmit({\r\n  onClick,\r\n  isComplete,\r\n  isLoading,\r\n  isDisabled,\r\n  loadingText,\r\n  submitText,\r\n  completeText,\r\n}) {\r\n  let buttonClassName = 'FormSubmit-Button'\r\n  if (isComplete) {\r\n    buttonClassName += ' FormSubmit-Button__Success'\r\n  } else if (isLoading) {\r\n    buttonClassName += ' FormSubmit-Button__Loading'\r\n  } else if (isDisabled) {\r\n    buttonClassName += ' FormSubmit-Button__Disabled'\r\n  }\r\n\r\n  return (\r\n    <div className='FormSubmit'>\r\n      <button\r\n        className={buttonClassName}\r\n        onClick={onClick}\r\n        disabled={isDisabled || isLoading || isComplete}\r\n      >\r\n        {isComplete ? completeText : isLoading ? loadingText : submitText}\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import './FormTitle.css'\r\nimport React from 'react'\r\n\r\nexport default function FormTitle({ children }) {\r\n  return <h1 className='FormTitle'>{children}</h1>\r\n}\r\n","import './TextInput.css'\r\nimport React from 'react'\r\n\r\nexport default function TextInput({ id, placeholder, value, onChange, type }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        id={id}\r\n        className='TextInput'\r\n        type={type || 'text'}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport TextInput from './TextInput'\r\n\r\nexport default function FormTextInput({\r\n  id,\r\n  placeholder,\r\n  value,\r\n  setValue,\r\n  type,\r\n}) {\r\n  const onChange = event => setValue(event.target.value)\r\n\r\n  return (\r\n    <TextInput\r\n      id={id}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n      type={type}\r\n    />\r\n  )\r\n}\r\n","import './FormLabel.css'\r\nimport React from 'react'\r\n\r\nexport default function FormLabel({ htmlFor, text, isOptional }) {\r\n  return (\r\n    <label className='FormLabel' htmlFor={htmlFor}>\r\n      <span className='FormLabel-Text'>{text}</span>\r\n      {isOptional && <span className='FormLabel-SubText'>Optional</span>}\r\n    </label>\r\n  )\r\n}\r\n","import './FormField.css'\r\nimport React from 'react'\r\n\r\nexport default function FormField({ children }) {\r\n  return <div className='FormField'>{children}</div>\r\n}\r\n","import './FormFieldHeading.css'\r\nimport React from 'react'\r\n\r\nexport default function FormFieldHeading({ children }) {\r\n  return <div className='FormFieldHeading'>{children}</div>\r\n}\r\n","import './ErrorMessage.css'\r\nimport React from 'react'\r\n\r\nexport default function ErrorMessage({ label }) {\r\n  return (\r\n    <div className='ErrorMessage'>\r\n      <div className='ErrorMessage-Text'>{label}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport FormSubmit from './FormSubmit'\r\nimport FormTitle from './FormTitle'\r\nimport FormTextInput from './FormTextInput'\r\nimport FormLabel from './FormLabel'\r\nimport FormField from './FormField'\r\nimport FormFieldHeading from './FormFieldHeading'\r\nimport ErrorMessage from './ErrorMessage'\r\n\r\nexport default function VerifyProduct({ submitData }) {\r\n  const [name, setName] = React.useState('')\r\n  const [email, setEmail] = React.useState('')\r\n  const [user, setUser] = React.useState('none')\r\n  const [activeSection, setActiveSection] = React.useState('basic-info')\r\n  const [hash, setHash] = React.useState('')\r\n  const [maker, setMaker] = React.useState('none')\r\n  const [marketPlace, setMarketPlace] = React.useState(null)\r\n  const [status, setStatus] = React.useState(null)\r\n  const [hasConnection, setHasConnection] = React.useState(navigator.onLine)\r\n  const [verifyProduct, setVerifyProduct] = React.useState(false)\r\n\r\n  const onChangeMarketPlace = event => setMarketPlace(event.target.value)\r\n\r\n  const verifyData = () => {\r\n    setStatus('loading')\r\n    setTimeout(() => {\r\n      setStatus('completed')\r\n    }, 3000)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const handleOnline = () => setHasConnection(true)\r\n    const handleOffline = () => setHasConnection(false)\r\n\r\n    window.addEventListener('online', handleOnline)\r\n    window.addEventListener('offline', handleOffline)\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline)\r\n      window.removeEventListener('offline', handleOffline)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <FormTitle>KYP Verify the Authenticity of your product</FormTitle>\r\n\r\n      <Section isVisible={activeSection === 'basic-info'}>\r\n        <SectionHeading>Enter your information</SectionHeading>\r\n\r\n        <FormField>\r\n          <FormFieldHeading>\r\n            <FormLabel htmlFor='input-name' text='Name' />\r\n          </FormFieldHeading>\r\n          <FormTextInput\r\n            id='input-name'\r\n            placeholder='Enter your name'\r\n            value={name}\r\n            setValue={setName}\r\n          />\r\n        </FormField>\r\n\r\n        <FormField>\r\n          <FormFieldHeading>\r\n            <FormLabel htmlFor='input-email' text='Enter email' />\r\n          </FormFieldHeading>\r\n          <FormTextInput\r\n            id='input-email'\r\n            placeholder='Enter your email'\r\n            value={email}\r\n            setValue={setEmail}\r\n          />\r\n        </FormField>\r\n\r\n        <FormField>\r\n          <FormFieldHeading>\r\n            <FormLabel\r\n              htmlFor='select-user'\r\n              text='Select a User'\r\n            />\r\n          </FormFieldHeading>\r\n          <select\r\n            id='select-user'\r\n            value={user}\r\n            onChange={event => setUser(event.target.value)}\r\n          >\r\n            <option value='none'>None</option>\r\n            <option value='fc'>Final customer</option>\r\n            <option value='wh'>Wholesaler</option>\r\n            <option value='mp'>Market place</option>\r\n          </select>\r\n        </FormField>\r\n\r\n        <FormSubmit\r\n          onClick={() => setActiveSection('product-info')}\r\n          isDisabled={!name || !email || user===\"none\"}\r\n          submitText='Submit'\r\n        />\r\n      </Section>\r\n\r\n      <Section isVisible={activeSection === 'product-info'}>\r\n        <SectionHeading>Product information</SectionHeading>\r\n\r\n        <FormField>\r\n          <FormFieldHeading>\r\n            <FormLabel htmlFor='input-hash' text='Hash Value' />\r\n          </FormFieldHeading>\r\n          <FormTextInput\r\n            id='input-hash'\r\n            placeholder='Enter your hash'\r\n            value={hash}\r\n            setValue={setHash}\r\n          />\r\n        </FormField>\r\n\r\n        <FormField>\r\n          <FormFieldHeading>\r\n            <FormLabel htmlFor='select-maker' text='Maker' />\r\n          </FormFieldHeading>\r\n          <select\r\n            id='select-maker'\r\n            value={maker}\r\n            onChange={event => setMaker(event.target.value)}\r\n          >\r\n            <option value='none' disabled={true}>\r\n              Select the brand of your product\r\n            </option>\r\n            <option value='nk'>Nike</option>\r\n            <option value='fs'>Fossil</option>\r\n            <option value='ch'>Carolina Herrera</option>\r\n            <option value='mt'>Motorola</option>\r\n            <option value='gc'>Gucci</option>\r\n            <option value='fn'>Fendi</option>\r\n            <option value='cr'>Crocs</option>\r\n            <option value='cn'>Chanel N5</option>\r\n            <option value='rx'>Rolex</option>\r\n            <option value='nt'>The North Face</option>\r\n          </select>\r\n        </FormField>\r\n\r\n        <FormSubmit\r\n          onClick={() => setActiveSection('verify-prod')}\r\n          isDisabled={!hash || maker === 'none'}\r\n          submitText='Continue'\r\n        />\r\n      </Section>\r\n\r\n      <Section isVisible={activeSection === 'verify-prod'}>\r\n        <SectionHeading>Verify the authenticity of your Product</SectionHeading>\r\n\r\n        <FormField>\r\n          <FormFieldHeading>\r\n            <FormLabel text='Choose a market place' />\r\n          </FormFieldHeading>\r\n          <div style={{ marginBottom: 5 }}>\r\n            <label htmlFor='input-amazon'>\r\n              <input\r\n                type='radio'\r\n                name='market-place'\r\n                id='input-amazon'\r\n                value='amazon'\r\n                checked={marketPlace === 'amazon'}\r\n                onChange={onChangeMarketPlace}\r\n              />\r\n              &nbsp;Amazon\r\n            </label>\r\n          </div>\r\n          <div style={{ marginBottom: 5 }}>\r\n            <label htmlFor='input-ebay'>\r\n              <input\r\n                type='radio'\r\n                name='market-place'\r\n                id='input-ebay'\r\n                value='ebay'\r\n                checked={marketPlace === 'ebay'}\r\n                onChange={onChangeMarketPlace}\r\n              />\r\n              &nbsp;Ebay\r\n            </label>\r\n          </div>\r\n          <div style={{ marginBottom: 5 }}>\r\n            <label htmlFor='input-olx'>\r\n              <input\r\n                type='radio'\r\n                name='market-place'\r\n                id='input-olx'\r\n                value='olx'\r\n                checked={marketPlace === 'olx'}\r\n                onChange={onChangeMarketPlace}\r\n              />\r\n              &nbsp;OLX\r\n            </label>\r\n          </div>\r\n        </FormField>\r\n\r\n        <FormField>\r\n          <label htmlFor='input-verify'>\r\n            <input\r\n              type='checkbox'\r\n              id='input-verify'\r\n              checked={verifyProduct}\r\n              onChange={() => setVerifyProduct(!verifyProduct)}\r\n            />\r\n            <span>Once you verify your product it will be permanently recorded on the Blockchain</span>\r\n          </label>\r\n        </FormField>\r\n\r\n        {!hasConnection && (\r\n          <div style={{ marginBottom: 10 }}>\r\n            <ErrorMessage label='You are offline. Go online to save the data.' />\r\n          </div>\r\n        )}\r\n\r\n        <FormSubmit\r\n          isDisabled={!marketPlace || !verifyProduct || !hasConnection}\r\n          isLoading={status === 'loading'}\r\n          isComplete={status === 'completed'}\r\n          loadingText='Recording product on the Blockchain'\r\n          completeText='Authenticated!'\r\n          submitText='Verify'\r\n          onClick={verifyData}\r\n        />\r\n      </Section>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Section({ children, isVisible }) {\r\n  if (!isVisible) {\r\n    return null\r\n  }\r\n\r\n  return <div>{children}</div>\r\n}\r\n\r\nfunction SectionHeading({ children }) {\r\n  return <h2 className='SectionHeading'>{children}</h2>\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import './index.css'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import './App.css'\r\nimport React from 'react'\r\nimport VerifyProduct from './components/VerifyProduct'\r\n\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className='App'>\r\n      <div className='App-Content'>\r\n        <VerifyProduct />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}